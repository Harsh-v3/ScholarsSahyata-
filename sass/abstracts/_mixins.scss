@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin center {
  & {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin bg-img-gradient($color-name, $image-url) {
  $color-light: map-get(map-get($colors, $color-name), light);
  $color-dark: map-get(map-get($colors, $color-name), dark);
  background-image: linear-gradient(to right bottom, $color-light, $color-dark),
    url($image-url);
}

@mixin bg-gradient($color-name, $opacity: 1) {
  $color-light: map-get(map-get($colors, $color-name), light);
  $color-dark: map-get(map-get($colors, $color-name), dark);
  background-image: linear-gradient(
    to right bottom,
    rgba($color-light, $opacity),
    rgba($color-dark, $opacity)
  );
}

//  media query manager
/* 
0 - 600px:     phone
600 - 900px:   tablet potrait
900 - 1200px:  tablet landscape
[1200 - 1800px] is where our normal styles apple
1800px +:      big desktop 

breakpoint argument choices:
-phone
-tab-port
-tab-land
-big-desktop

Order: Base + Typography > general layout + grid > page layout > components

1em = 16px
*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    // 600 px
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  }
  @if $breakpoint == tab-port {
    // 900 px
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == tab-land {
    // 1200 px
    @media only screen and (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    // 1800 px
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  }
}
